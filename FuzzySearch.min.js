/* Copyright 2020 by Jon Michael Galindo | Use of this source code is governed by a MIT-style license that can be found in the license file or at https://opensource.org/licenses/MIT. */
const FuzzySearch=function(q01={}){const q02=(...P)=> console.error(...P);const q17="SCORE_WIDTH_BYTES",q18="DATA_WIDTH_BYTES",q19="FORCE_SINGLE_THREAD",q20="FUZZY_RESOLUTION";if(q17 in q01){if(q01[q17]!==2&&q01[q17]!==4){q02("FuzzySearch(options) options.SCORE_WIDTH_BYTES must be integer:2 or 4.");throw "Instantiation Error";}}else q01[q17]=2;if(q18 in q01){if(q01[q18]!==2&&q01[q18]!==4){q02("FuzzySearch(options) options.DATA_WIDTH_BYTES must be integer:2 or 4.");throw "Instantiation Error";}}else q01[q18]=2;if(q19 in q01){if(q01[q19]!==true&&q01[q19]!==false){q02("FuzzySearch(options) options.DATA_WIDTH_BYTES must be boolean:true or false.");throw "Instantiation Error";}}else q01[q19]=false;if(q20 in q01){if(typeof q01[q20]!=="number"){q02("FuzzySearch(options) options.FUZZY_RESOLUTION must be a number.");throw "Instantiation Error";}else if(parseInt(q01[q20])!==q01[q20]){q02("FuzzySearch(options) options.DATA_WIDTH_BYTES must be an integer. It was:",q01[q20]);throw "Instantiation Error";}else if(q01[q20]<=0){q02("FuzzySearch(options) options.DATA_WIDTH_BYTES must be greater than 0. It was:",q01[q20]);throw "Instantiation Error";}}else q01[q20]=200;const q04={};const q03={1:Uint8Array,2:Uint16Array,4:Uint32Array},q05=["Elements Count","Fields Count",],q06=2,q07=q05.length*q06,q08=q01.SCORE_WIDTH_BYTES,q09=["Perfect Match","Full Match","Fuzzy Match"],q10=0,q11=1,q12=2,q13=q09.length,q14=q01.DATA_WIDTH_BYTES,q15=q01.FORCE_SINGLE_THREAD,q16=q01.FUZZY_RESOLUTION;let q21=null,q22=null,q23=null,q24=null,q25=false;let q26=false,q27=false,q28=false;const q29=(code,name)=> `FuzzySearch.init(data:<array[<string>|<object{*:<string>}>,...]>,keys:<array[<string>,...]>,copy:<unset>|"direct"|"ascii-words"|"ascii-code",fast:<unset>|<boolean>)-type ${code}did not match ${name}`;function init(data,keys,copy="direct",fast=false){if(q26===true){q02(`FuzzySearch.init() called while search in progress.\nCall:await FuzzySearch.search(target) or use multiple instances of FuzzySearch to avoid this block.`);throw "Thread Lock Error";}if(fast===false){if(copy!=="direct"&&copy!=="ascii-words"&&copy!=="ascii-code"){q02(q29(`<unset>|"direct"|"ascii-words"|"ascii-code"`,`"copy"`)+" because:\n",`"copy" was:`,copy);throw "Type Error";}if(fast!==true&&fast!==false){q02(q29(`<unset>|<boolean>`,`"fast"`)+" because:\n",`"fast" was:`,fast);throw "Type Error";}if(Array.isArray(data)===false){q02(q29("<array>",`"data"`)+" because:\n",`"data" was type:<${typeof data}>`);throw "Type Error";}let q30=false;const q31=data[0];if(typeof q31==="string"){q28=true;keys=null;}else if(! keys){keys=[];if(typeof q31==="object"&&Array.isArray(q31)===false){if(Array.isArray(q31)){const q32=Array.isArray(q31)?"array":(typeof q31);q02(q29("<array[<object>,...]>",`"data"`)+" because:\n",`"data[0]" was type:<${q32}>`);throw "Type Error";}const q33=Object.keys(q31);if(q33.length===0){q02(`"data[0]" had no keys.`);throw "Type Error"}for(let k of q33){if(typeof q31[k]==="string")keys.push(k);}if(keys.length===0){q02(`The object at "data[0]" contained no searchable strings.`);throw "Type Error"}q30=true;}else {const q34=Array.isArray(q31)?"array":(typeof q31);q02(q29("<array[<string>|<object>,...]>",`"data"`)+" because:\n",`"data[0]" was type:<${q34}>`);throw "Type Error";}}else {if(Array.isArray(keys)===false){q02(q29("<array>",`"keys"`)+" because:\n",`"keys" was type:<${typeof keys}>`);throw "Type Error";}for(let ki=0;ki<keys.length;ki++){const k=keys[ki];if(typeof k!=="string"){const q35=Array.isArray(k)?"array":(typeof k);q02(q29("<array[<string>,...]>",`"keys"`)+" because:\n",`"keys[${ki}]" was type:<${q35}>`);throw "Type Error";}}}for(let di=0;di<data.length;di++){const d=data[di];if(q28){if(typeof d!=="string"){const q36=Array.isArray(d)?"array":(typeof d);q02(q29("<array[<string>,...]>",`"data"`)+" because:\n",`"data[${di}]" was type:<${q36}>`);throw "Type Error";}}else {if(typeof d!=="object"){const q36=Array.isArray(d)?"array":(typeof d);q02(q29("<array[<object>,...]>",`"data"`)+" because:\n",`"data[${di}]" was type:<${q36}>`);throw "Type Error";}else {for(let ki=0;ki<keys.length;ki++){const k=keys[ki];if(! k in d){q02(q29("<array[<object{...[&keys]}>,...]>",`"data"`)+" because:\n",`"data[${di}]" was missing key "keys[${ki}]":"${k}"`,q30?`\n("keys[]" were inferred from "data[0]".)`:"");throw "Type Error";}else {const q36=Array.isArray(d[k])?"array":(typeof d[k]);if(q36!=="string"){q02(q29("<array[<object{...[&keys]:<string>}>,...]>",`"data"`)+" because:\n",`"data[${di}]["${k}"]" was type <${q36}>`);throw "Type Error";}}}}}}}else {if(! keys){const q37=data[0];if(typeof q37==="string")q28=true;else {const q38=Object.keys(q37);keys=[];for(let k of q38)if(typeof q37[k]==="string")keys.push(k);}}}if(q28)q23=null;else {q23=[];for(let k of keys)q23.push(k);}q24=copy;q25=fast;const {tables,buffer}=q39(data,keys,copy);q22=buffer;q21=tables;q27=false;}q04.init=init;async function q40(q41,q42=10){if(q26===true){q02(`FuzzySearch.search(target) called while search in progress.\n`,`Call:await FuzzySearch.search(target) to avoid this block.`);throw "Thread Lock Error";}if(q15===true){q43(q41);return q44(q42);}else {await q45(q41);return q44(q42);}}q04.search=q40;function q44(limit){if(q26===true){q02(`FuzzySearch.getResults(limit) called while search in progress.\n`,`Call:await FuzzySearch.search(target) to avoid this block.`);throw "Thread Lock Error";}if(q25===false){if(q21===null){q02("FuzzySearch.getResults(limit) called before initializing search tables.\n"+`Call FuzzySearch.init(keys,data). Then call FuzzySearch.search(target). Then call FuzzySearch.getScore(index) or FuzzySearch.getResults(limit).`);throw "Initialization Error";}else if(q27===false){q02(`FuzzySearch.getResults(limit) called before performing a search.\n`+`Call FuzzySearch.search(target). Then call FuzzySearch.getScore(index) or FuzzySearch.getResults(limit).`);throw "Initialization Error";}}const q46={},q47={};if(q28){q46.perfect=[];q46.full=[];q46.fuzzy=[];q47.perfect={score:Infinity,resultIndex:-1,elementIndex:-1,};q47.full={score:Infinity,resultIndex:-1,elementIndex:-1,};q47.fuzzy={score:Infinity,resultIndex:-1,elementIndex:-1,};}else for(let key of q23){q46[key]={perfect:[],full:[],fuzzy:[],};q47[key]={perfect:{score:Infinity,resultIndex:-1,elementIndex:-1,},full:{score:Infinity,resultIndex:-1,elementIndex:-1,},fuzzy:{score:Infinity,resultIndex:-1,elementIndex:-1,},}}const {headerTable:q54,scoreTable:q53}=q21,[q55,q56]=q54;let SI=0;for(let ei=0;ei<q55;ei++){for(let fi=0;fi<q56;fi++){const key=q28?null:q23[fi],q48=q28?q46:q46[key],q49=q28?q47:q47[key],q50=q53[SI+q10],q51=q53[SI+q11],q52=q53[SI+q12];if(q50>0){if(q48.perfect.length<limit){q48.perfect.push({score:q50,index:ei});if(q50<q49.perfect.score){q49.perfect.score=q50;q49.perfect.q58=q48.perfect.length-1;q49.perfect.q59=ei;}}else if(q50<q49.perfect.score){const overwriteIndex=q49.perfect.q58;q48.perfect[overwriteIndex].score=q50;q48.perfect[overwriteIndex].index=ei;q49.perfect.score=q50;q49.perfect.q58=overwriteIndex;q49.perfect.q59=ei;}}if(q51>0){if(q48.full.length<limit){q48.full.push({score:q51,index:ei});if(q51<q49.full.score){q49.full.score=q51;q49.full.q58=q48.full.length-1;q49.full.q59=ei;}}else if(q51<q49.full.score){const overwriteIndex=q49.full.q58;q48.full[overwriteIndex].score=q51;q48.full[overwriteIndex].index=ei;q49.full.score=q51;q49.full.q58=overwriteIndex;q49.full.q59=ei;}}if(q52>0){if(q48.fuzzy.length<limit){q48.fuzzy.push({score:q52,index:ei});if(q52<q49.fuzzy.score){q49.fuzzy.score=q52;q49.fuzzy.q58=q48.fuzzy.length-1;q49.fuzzy.q59=ei;}}else if(q52<q49.fuzzy.score){const q57=q49.fuzzy.q58;q48.fuzzy[q57].score=q52;q48.fuzzy[q57].index=ei;q49.fuzzy.score=q52;q49.fuzzy.q58=q57;q49.fuzzy.q59=ei;}}SI+=q13;}}const sort=(a,b)=>{if(b.score!==a.score)return b.score-a.score;else return a.index-b.index;};if(q28){q46.perfect.sort(sort);q46.full.sort(sort);q46.fuzzy.sort(sort);}else for(let key of q23){const result=q46[key];result.perfect.sort(sort);result.full.sort(sort);result.fuzzy.sort(sort);}return q46;}q04.getResults=q44;function q60(index){if(q26===true){q02(`FuzzySearch.getScore(index) called while search in progress.\n`,`Call:await FuzzySearch.search(target) to avoid this block.`);throw "Thread Lock Error";}if(q25===false){if(q21===null){q02("FuzzySearch.getScore(index) called before initializing search tables.\n"+`Call FuzzySearch.init(keys,data). Then call FuzzySearch.search(target). Then call FuzzySearch.getScore(index) or FuzzySearch.getResults(limit).`);throw "Initialization Error";}else if(q27===false){q02(`FuzzySearch.getScore(index) called before performing a search.\n`+`Call FuzzySearch.search(target). Then call FuzzySearch.getScore(index) or FuzzySearch.getResults(limit).`);throw "Initialization Error";}}const {headerTable,scoreTable:q64}=q21,[q61,q62]=headerTable;let q65=q62*q13*index;if(index>q61){q02(`FuzzySearch.getScore(index) called with index:${index},but data was initialized with only ${q61}searchable elements.`);throw "Out-of-Bounds Error";}else {const keys=q23||["W"];let q63={};for(let ki=0;ki<keys.length;ki++){const k=keys[ki],score={perfect:q64[q65+q10],full:q64[q65+q11],fuzzy:q64[q65+q12]};q63[k]=score;q65+=q13;}return q28?q63["W"]:q63;}}q04.getScore=q60;function q43(target){if(q25===false){if(typeof target!=="string"){q02(`FuzzySearch.search(target:<string>)-type <string> did not match target:`,target);throw "Type Error";}else if(q21===null){q02(`FuzzySearch.search(target) called before initializing search tables.\n`+`Call FuzzySearch.init(keys,data) before calling FuzzySearch.search(target).`);throw "Initialization Error";}}q66(target,q21);q27=true;}function q66(target,tables){const {headerTable:q67,scoreTable:q68,dataTable:q69}=tables,[q70,q71]=q67,q72=target.length,q73=q74(target,q24);let IS=0,ID=0;for(let ei=0;ei<q70;ei++){for(let fi=0;fi<q71;fi++){const q75=q69[ID];++ID;q68[IS+q10]=0;q68[IS+q11]=0;q68[IS+q12]=0;let q76=0;for(let i=0;i<q72;i++){const q77=q73[i];let q78=0;for(let d=0;d<q75;d++){const q79=q69[ID+d];if(q77===q79){q68[IS+q12]+=Math.max(1,parseInt(q16/q75));q78=1;if(q72===1)++q68[IS+q10];const J=q72-i;for(let j=1;j<J&&(d+j)<q75;j++){const q80=q73[j],q81=q69[ID+d+j];if(q80===q81){const q82=parseInt(q16/Math.max(1,(q75/j)));q68[IS+q12]+=q82;if(i===0&&j===J-1){++q68[IS+q10];}}else break;}}}if(q78===1)++q76}let q83=parseInt(q68[IS+q12]/q72);q68[IS+q12]=q83;if(q76===q72){q68[IS+q11]=1;}IS+=q13;ID+=q75;}}}function q39(data,keys,copy){if(! keys) keys=["W"];const q84=q07,q85=data.length,q86=keys.length,q87=q85*q86,q88=q87*q13,q89=q88*q08,q90=1,q91=q90*q14;let q92=0;for(let q93 of data)for(let key of keys){const entry=q28?q93:q93[key],q94=entry.length,q95=q94*q14;q92+=q95+q91;}const q96=q84+q89+q92,w10=new ArrayBuffer(q96),q97=q03[q06],q98=new q97(w10,0,2);q98[0]=q85;q98[1]=q86;const q99=w00(w10),{dataTable:w01}=q99;let I=0;for(let w02 of data){for(let key of keys){const w06=q28?w02:w02[key],w03=w06.length;w01[I]=w03;I+=q90;if(copy==="direct"){for(let i=0;i<w06.length;i++)w01[I+i]=w06.charCodeAt(i);I+=w03;}else if(copy==="ascii-words"){let w04=0;let w05=true;for(let i=0;i<w06.length;i++){const code=w06.charCodeAt(i);if(code>=65&&code<=90){w01[I+i]=code+32;w05=true;++w04;}else if((code>=97&&code<=122)||(code>=48&&code<=57)){w01[I+i]=code;w05=true;++w04;}else if(w05===true){w01[I+i]=0x20;w05=false;++w04;}else if(w05===false)continue;}w01[I-1]=w04;I+=w04;}else if(copy==="ascii-code"){let w07=0;let w08=true;for(let i=0;i<w06.length;i++){const code=w06.charCodeAt(i),w09=(code===0x20||(code>=0x9&&code<=0xd));if(w08===true&&w09===true){w01[I+i]=0x20;w08=false;++w07;}else if(code>=65&&code<=90){w01[I+i]=code+32;w08=true;++w07;}else if(w09===false){w01[I+i]=code;w08=true;++w07;}else if(w08===false)continue;}w01[I-1]=w07;I+=w07;}}}return {tables:q99,buffer:w10}}function w00(w14){const w11=q05.length,w12=q07;const w13=w15(w14,w11),[w16,w17]=w13;const w18=w16*w17,w19=w18*q13,w20=w19*q08;const w21=w22(w14,w12,w19),w24=w23(w14,w12,w20);return {headerTable:w13,scoreTable:w21,dataTable:w24}}function w15(w25,w26){const w27=0,w28=w26,w29=q03[q06],w30=new w29(w25,w27,w28);return w30;}function w22(w31,w32,w33){const w34=w32,w35=w33,w36=q03[q08],w37=new w36(w31,w34,w35);return w37;}function w23(w38,w39,w40){const w41=w39+w40,w42=q03[q14],w43=new w42(w38,w41);return w43;}function q74(w44,w45,){if(w45==="ascii-words"){w44=w44.replace(/[^\w\d\s]/gm," ").replace(/[\s\r\n\t\v\f]+/gm," ").toLowerCase();}else if(w45==="ascii-code"){w44=w44.replace(/[\s\r\n\t\v\f]+/gm," ").toLowerCase();}const w46=w44.length,w47=q03[q14],w48=new w47(w46);for(let i=0;i<w46;i++)w48[i]=w44.charCodeAt(i);return w48;}let q45=null;if(q15===false){const w49=(()=>{const w54="toLocaleString",w50=`const q03={1:Uint8Array,2:Uint16Array,4:Uint32Array},q05=${JSON.stringify(q05)},q06=${q06},q07=q05.length*q06,q08=${q08},q09=${JSON.stringify(q09)},q10=${q10},q11=${q11},q12=${q12},q13=q09.length,q14=${q14},q16=${q16};let q24=null;onmessage=w58=>{q24=w58.data.copy;const {target,buffer}=w58.data,w59=w00(buffer);q66(target,w59);self.postMessage({buffer},[buffer])};${q66[w54]()};${w00[w54]()};${w15[w54]()};${w22[w54]()};${w23[w54]()};${q74[w54]()};`,w51=new Blob([w50],{type:"text/javascript"}),w52=URL.createObjectURL(w51),w53=new Worker(w52);URL.revokeObjectURL(w52);return w53;})();q45=function(w55){q26=true;return new Promise(w56=>{w49.onmessage=w57=>{q22=w57.data.buffer;q21=w00(q22);q26=false;q27=true;w56();};w49.postMessage({target:w55,buffer:q22},[q22])})}}return q04;}